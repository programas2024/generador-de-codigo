import 'package:flutter/material.dart';
import 'package:clipboard/clipboard.dart';
import 'package:url_launcher/url_launcher.dart';
import 'api_service.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatefulWidget {
  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  final service = OpenRouterService();
  String modelo = "gpt-4o-mini";
  String respuesta = "";
  final promptController = TextEditingController();
  List<HistorialItem> historial = [];
  bool cargando = false;
  String lenguajeDetectado = "text";

  // Detectar lenguaje del código
  void detectarLenguaje(String codigo) {
    if (codigo.contains('<!DOCTYPE html>') ||
        codigo.contains('<html') ||
        codigo.contains('</html>')) {
      lenguajeDetectado = "html";
    } else if (codigo.contains('import') &&
        (codigo.contains('package:flutter') ||
            codigo.contains('Widget') ||
            codigo.contains('build('))) {
      lenguajeDetectado = "dart";
    } else if (codigo.contains('function') ||
        codigo.contains('const ') ||
        codigo.contains('let ') ||
        codigo.contains('var ') ||
        codigo.contains('=>')) {
      lenguajeDetectado = "javascript";
    } else if (codigo.contains('{') &&
        codigo.contains('}') &&
        codigo.contains(':') &&
        codigo.contains(';')) {
      lenguajeDetectado = "css";
    } else {
      lenguajeDetectado = "text";
    }
  }

  Future<void> generar() async {
    if (promptController.text.isEmpty) return;

    setState(() {
      cargando = true;
      respuesta = "";
    });

    try {
      final result = await service.generarCodigo(promptController.text, modelo);
      setState(() {
        respuesta = result;
        cargando = false;
        detectarLenguaje(result);

        // Agregar al historial
        historial.insert(
          0,
          HistorialItem(
            prompt: promptController.text,
            respuesta: result,
            modelo: modelo,
            fecha: DateTime.now(),
            lenguaje: lenguajeDetectado,
          ),
        );

        // Limitar el historial a 10 elementos
        if (historial.length > 10) {
          historial.removeLast();
        }
      });
    } catch (e) {
      setState(() {
        respuesta = "⚠️ Error: $e";
        cargando = false;
      });
    }
  }

  void copiarCodigo() {
    if (respuesta.isNotEmpty) {
      FlutterClipboard.copy(respuesta).then((value) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(
            content: Text('✅ Código copiado al portapapeles'),
            backgroundColor: Colors.green,
            duration: Duration(seconds: 2),
          ),
        );
      });
    }
  }

  void cargarDelHistorial(HistorialItem item) {
    setState(() {
      respuesta = item.respuesta;
      lenguajeDetectado = item.lenguaje;
      promptController.text = item.prompt;
      modelo = item.modelo;
    });
  }

  void _mostrarAyuda() {
    showDialog(
      context: context,
      builder: (context) => Dialog(
        backgroundColor: Color(0xFF1E1E2E),
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(25),
        ),
        child: Container(
          width: MediaQuery.of(context).size.width * 0.9,
          padding: EdgeInsets.all(30),
          decoration: BoxDecoration(
            gradient: LinearGradient(
              colors: [Color(0xFF1E1E2E), Color(0xFF2D2D44)],
              begin: Alignment.topLeft,
              end: Alignment.bottomRight,
            ),
            borderRadius: BorderRadius.circular(25),
          ),
          child: SingleChildScrollView(
            child: Column(
              mainAxisSize: MainAxisSize.min,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                // Header con icono
                Center(
                  child: Container(
                    padding: EdgeInsets.all(20),
                    decoration: BoxDecoration(
                      gradient: LinearGradient(
                        colors: [Colors.cyan, Colors.purpleAccent],
                        begin: Alignment.topLeft,
                        end: Alignment.bottomRight,
                      ),
                      shape: BoxShape.circle,
                    ),
                    child:
                        Icon(Icons.auto_awesome, color: Colors.white, size: 40),
                  ),
                ),
                SizedBox(height: 20),

                // Título
                Center(
                  child: Text(
                    "🌟 Generador AI - Ayuda",
                    style: TextStyle(
                      color: Colors.white,
                      fontSize: 24,
                      fontWeight: FontWeight.bold,
                    ),
                    textAlign: TextAlign.center,
                  ),
                ),
                SizedBox(height: 10),

                Center(
                  child: Text(
                    "Tu asistente personal para generar código",
                    style: TextStyle(
                      color: Colors.white70,
                      fontSize: 16,
                    ),
                    textAlign: TextAlign.center,
                  ),
                ),
                SizedBox(height: 30),

                // Características
                _buildCaracteristica(
                  Icons.lightbulb_outline,
                  "¿Qué hace esta aplicación?",
                  "Esta aplicación utiliza inteligencia artificial para generar código en diferentes lenguajes de programación basado en tus descripciones en lenguaje natural.",
                ),

                _buildCaracteristica(
                  Icons.model_training,
                  "Modelos de IA Disponibles",
                  "• GPT-4o mini: Rápido y eficiente para código general\n• Claude 3.5 Sonnet: Excelente para código complejo\n• Llama 3 8B: Modelo de código abierto",
                ),

                _buildCaracteristica(
                  Icons.code,
                  "Lenguajes Soportados",
                  "• Dart/Flutter 🎯\n• JavaScript 📜\n• HTML 🌐\n• CSS 🎨\n• Y muchos más...",
                ),

                _buildCaracteristica(
                  Icons.auto_awesome,
                  "Características Principales",
                  "• Generación de código ilimitada\n• Detección automática de lenguaje\n• Historial de consultas\n• Copiado rápido al portapapeles\n• Vista previa para HTML\n• Interfaz moderna y responsive",
                ),

                _buildCaracteristica(
                  Icons.help,
                  "¿Cómo usar?",
                  "1. Describe el código que necesitas\n2. Selecciona el modelo de IA\n3. Haz clic en 'Generar'\n4. ¡Copia y usa tu código!",
                ),

                SizedBox(height: 30),

                // Botón de cerrar
                Center(
                  child: Container(
                    decoration: BoxDecoration(
                      gradient: LinearGradient(
                        colors: [Colors.cyan, Colors.purpleAccent],
                        begin: Alignment.topLeft,
                        end: Alignment.bottomRight,
                      ),
                      borderRadius: BorderRadius.circular(15),
                      boxShadow: [
                        BoxShadow(
                          color: Colors.cyan.withOpacity(0.3),
                          blurRadius: 10,
                          offset: Offset(0, 4),
                        ),
                      ],
                    ),
                    child: ElevatedButton(
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.transparent,
                        foregroundColor: Colors.white,
                        padding:
                            EdgeInsets.symmetric(horizontal: 40, vertical: 15),
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(15),
                        ),
                      ),
                      onPressed: () => Navigator.of(context).pop(),
                      child: Text(
                        "¡Entendido!",
                        style: TextStyle(
                            fontSize: 18, fontWeight: FontWeight.w600),
                      ),
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildCaracteristica(
      IconData icon, String titulo, String descripcion) {
    return Container(
      margin: EdgeInsets.only(bottom: 20),
      padding: EdgeInsets.all(20),
      decoration: BoxDecoration(
        color: Colors.white.withOpacity(0.05),
        borderRadius: BorderRadius.circular(15),
        border: Border.all(color: Colors.white.withOpacity(0.1)),
      ),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            padding: EdgeInsets.all(12),
            decoration: BoxDecoration(
              color: Colors.cyan.withOpacity(0.2),
              borderRadius: BorderRadius.circular(12),
            ),
            child: Icon(icon, color: Colors.cyan, size: 24),
          ),
          SizedBox(width: 15),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  titulo,
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 18,
                    fontWeight: FontWeight.w600,
                  ),
                ),
                SizedBox(height: 8),
                Text(
                  descripcion,
                  style: TextStyle(
                    color: Colors.white70,
                    fontSize: 14,
                    height: 1.5,
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData.dark().copyWith(
        scaffoldBackgroundColor: Color(0xFF0F0F1A),
        primaryColor: Colors.cyan,
        colorScheme: ColorScheme.dark(
          primary: Colors.cyan,
          secondary: Colors.purpleAccent,
          surface: Color(0xFF1E1E2E),
        ),
        textTheme: TextTheme(
          bodyMedium: TextStyle(color: Colors.white),
        ),
      ),
      home: Scaffold(
        backgroundColor: Color(0xFF0F0F1A),
        appBar: AppBar(
          backgroundColor: Color(0xFF1E1E2E),
          elevation: 0,
          title: Row(
            children: [
              Container(
                padding: EdgeInsets.all(8),
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    colors: [Colors.cyan, Colors.purpleAccent],
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                  ),
                  borderRadius: BorderRadius.circular(12),
                ),
                child: Icon(Icons.auto_awesome, color: Colors.white, size: 24),
              ),
              SizedBox(width: 12),
              Text(
                "Generador AI",
                style: TextStyle(
                  fontWeight: FontWeight.bold,
                  fontSize: 20,
                  color: Colors.white,
                ),
              ),
            ],
          ),
          actions: [
            IconButton(
              icon: Icon(Icons.help_outline, color: Colors.cyan),
              onPressed: _mostrarAyuda,
              tooltip: "Ayuda",
            ),
            if (historial.isNotEmpty)
              IconButton(
                icon: Icon(Icons.history, color: Colors.purpleAccent),
                onPressed: () {
                  showDialog(
                    context: context,
                    builder: (context) => HistorialDialog(
                      historial: historial,
                      onSeleccionar: cargarDelHistorial,
                    ),
                  );
                },
                tooltip: "Ver historial",
              ),
            IconButton(
              icon: Icon(Icons.code, color: Colors.greenAccent),
              onPressed: () async {
                const url = 'https://github.com';
                if (await canLaunch(url)) {
                  await launch(url);
                }
              },
              tooltip: "Código fuente",
            ),
          ],
        ),
        body: Padding(
          padding: const EdgeInsets.all(20),
          child: Column(
            children: [
              // Input del usuario
              Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    colors: [Color(0xFF1E1E2E), Color(0xFF2D2D44)],
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                  ),
                  borderRadius: BorderRadius.circular(16),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.black.withOpacity(0.3),
                      blurRadius: 10,
                      offset: Offset(0, 4),
                    ),
                  ],
                ),
                child: TextField(
                  controller: promptController,
                  style: TextStyle(color: Colors.white, fontSize: 16),
                  maxLines: 3,
                  decoration: InputDecoration(
                    filled: true,
                    fillColor: Colors.transparent,
                    prefixIcon: Icon(
                      Icons.auto_awesome,
                      color: Colors.cyan,
                      size: 24,
                    ),
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(16),
                      borderSide: BorderSide.none,
                    ),
                    labelText: "¿Qué código quieres generar?",
                    labelStyle: TextStyle(
                      color: Colors.white70,
                      fontSize: 16,
                    ),
                    hintText:
                        "Ej: Crea un botón en Flutter con gradiente azul y animación...",
                    hintStyle: TextStyle(color: Colors.white54),
                    contentPadding: EdgeInsets.all(20),
                  ),
                  onSubmitted: (value) => generar(),
                ),
              ),
              SizedBox(height: 16),

              // Fila con selector de modelo y botón
              Row(
                children: [
                  // Selección de modelo
                  Expanded(
                    flex: 2,
                    child: Container(
                      padding:
                          EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          colors: [Color(0xFF1E1E2E), Color(0xFF2D2D44)],
                          begin: Alignment.centerLeft,
                          end: Alignment.centerRight,
                        ),
                        borderRadius: BorderRadius.circular(12),
                        border:
                            Border.all(color: Colors.white.withOpacity(0.1)),
                      ),
                      child: DropdownButton<String>(
                        dropdownColor: Color(0xFF2D2D44),
                        value: modelo,
                        isExpanded: true,
                        underline: SizedBox(),
                        icon: Icon(
                          Icons.arrow_drop_down,
                          color: Colors.cyan,
                          size: 24,
                        ),
                        items: [
                          DropdownMenuItem(
                            value: "gpt-4o-mini",
                            child: Row(
                              children: [
                                Container(
                                  padding: EdgeInsets.all(6),
                                  decoration: BoxDecoration(
                                    color: Colors.purple.withOpacity(0.2),
                                    borderRadius: BorderRadius.circular(8),
                                  ),
                                  child: Icon(
                                    Icons.flash_on,
                                    color: Colors.purpleAccent,
                                    size: 18,
                                  ),
                                ),
                                SizedBox(width: 12),
                                Text(
                                  "GPT-4o mini",
                                  style: TextStyle(color: Colors.white),
                                ),
                              ],
                            ),
                          ),
                          DropdownMenuItem(
                            value: "anthropic/claude-3.5-sonnet",
                            child: Row(
                              children: [
                                Container(
                                  padding: EdgeInsets.all(6),
                                  decoration: BoxDecoration(
                                    color: Colors.green.withOpacity(0.2),
                                    borderRadius: BorderRadius.circular(8),
                                  ),
                                  child: Icon(
                                    Icons.psychology,
                                    color: Colors.greenAccent,
                                    size: 18,
                                  ),
                                ),
                                SizedBox(width: 12),
                                Text(
                                  "Claude 3.5 Sonnet",
                                  style: TextStyle(color: Colors.white),
                                ),
                              ],
                            ),
                          ),
                          DropdownMenuItem(
                            value: "meta-llama/llama-3-8b-instruct",
                            child: Row(
                              children: [
                                Container(
                                  padding: EdgeInsets.all(6),
                                  decoration: BoxDecoration(
                                    color: Colors.blue.withOpacity(0.2),
                                    borderRadius: BorderRadius.circular(8),
                                  ),
                                  child: Icon(
                                    Icons.code,
                                    color: Colors.blueAccent,
                                    size: 18,
                                  ),
                                ),
                                SizedBox(width: 12),
                                Text(
                                  "Llama 3 8B",
                                  style: TextStyle(color: Colors.white),
                                ),
                              ],
                            ),
                          ),
                        ],
                        onChanged: (value) {
                          setState(() {
                            modelo = value!;
                          });
                        },
                      ),
                    ),
                  ),
                  SizedBox(width: 12),

                  // Botón de generar
                  Expanded(
                    flex: 1,
                    child: Container(
                      decoration: BoxDecoration(
                        gradient: LinearGradient(
                          colors: [Colors.cyan, Colors.purpleAccent],
                          begin: Alignment.topLeft,
                          end: Alignment.bottomRight,
                        ),
                        borderRadius: BorderRadius.circular(12),
                        boxShadow: [
                          BoxShadow(
                            color: Colors.cyan.withOpacity(0.3),
                            blurRadius: 10,
                            offset: Offset(0, 4),
                          ),
                        ],
                      ),
                      child: ElevatedButton.icon(
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.transparent,
                          foregroundColor: Colors.white,
                          shadowColor: Colors.transparent,
                          padding: EdgeInsets.symmetric(
                              horizontal: 16, vertical: 16),
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(12),
                          ),
                        ),
                        icon: cargando
                            ? SizedBox(
                                width: 20,
                                height: 20,
                                child: CircularProgressIndicator(
                                  strokeWidth: 2,
                                  valueColor: AlwaysStoppedAnimation<Color>(
                                      Colors.white),
                                ),
                              )
                            : Icon(Icons.auto_awesome, size: 20),
                        onPressed: cargando ? null : generar,
                        label: Text(
                          cargando ? "Generando..." : "Generar",
                          style: TextStyle(
                              fontSize: 16, fontWeight: FontWeight.w600),
                        ),
                      ),
                    ),
                  ),
                ],
              ),

              SizedBox(height: 20),

              // Indicador de lenguaje detectado
              if (respuesta.isNotEmpty && !cargando)
                Container(
                  width: double.infinity,
                  padding: EdgeInsets.symmetric(horizontal: 20, vertical: 12),
                  decoration: BoxDecoration(
                    gradient: LinearGradient(
                      colors: [Color(0xFF1E1E2E), Color(0xFF2D2D44)],
                      begin: Alignment.centerLeft,
                      end: Alignment.centerRight,
                    ),
                    borderRadius: BorderRadius.only(
                      topLeft: Radius.circular(16),
                      topRight: Radius.circular(16),
                    ),
                    border: Border.all(color: Colors.white.withOpacity(0.1)),
                  ),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Row(
                        children: [
                          Container(
                            padding: EdgeInsets.all(6),
                            decoration: BoxDecoration(
                              color: _obtenerColorLenguaje(lenguajeDetectado)
                                  .withOpacity(0.2),
                              borderRadius: BorderRadius.circular(8),
                            ),
                            child: Icon(
                              _obtenerIconoLenguaje(lenguajeDetectado),
                              color: _obtenerColorLenguaje(lenguajeDetectado),
                              size: 18,
                            ),
                          ),
                          SizedBox(width: 12),
                          Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                "Lenguaje detectado",
                                style: TextStyle(
                                  color: Colors.white70,
                                  fontSize: 12,
                                ),
                              ),
                              Text(
                                _obtenerNombreLenguaje(lenguajeDetectado),
                                style: TextStyle(
                                  color: Colors.white,
                                  fontSize: 16,
                                  fontWeight: FontWeight.w600,
                                ),
                              ),
                            ],
                          ),
                        ],
                      ),
                      Row(
                        children: [
                          if (lenguajeDetectado == "html")
                            Container(
                              decoration: BoxDecoration(
                                gradient: LinearGradient(
                                  colors: [Colors.orange, Colors.deepOrange],
                                  begin: Alignment.topLeft,
                                  end: Alignment.bottomRight,
                                ),
                                borderRadius: BorderRadius.circular(8),
                              ),
                              child: ElevatedButton.icon(
                                style: ElevatedButton.styleFrom(
                                  backgroundColor: Colors.transparent,
                                  foregroundColor: Colors.white,
                                  padding: EdgeInsets.symmetric(
                                      horizontal: 12, vertical: 8),
                                  shape: RoundedRectangleBorder(
                                    borderRadius: BorderRadius.circular(8),
                                  ),
                                ),
                                icon: Icon(Icons.visibility, size: 16),
                                onPressed: () {
                                  showDialog(
                                    context: context,
                                    builder: (context) => VistaPreviaDialog(
                                      codigo: respuesta,
                                      lenguaje: lenguajeDetectado,
                                    ),
                                  );
                                },
                                label: Text("Vista previa"),
                              ),
                            ),
                          SizedBox(width: 8),
                          Container(
                            decoration: BoxDecoration(
                              gradient: LinearGradient(
                                colors: [Colors.green, Colors.lightGreen],
                                begin: Alignment.topLeft,
                                end: Alignment.bottomRight,
                              ),
                              borderRadius: BorderRadius.circular(8),
                            ),
                            child: ElevatedButton.icon(
                              style: ElevatedButton.styleFrom(
                                backgroundColor: Colors.transparent,
                                foregroundColor: Colors.white,
                                padding: EdgeInsets.symmetric(
                                    horizontal: 12, vertical: 8),
                                shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(8),
                                ),
                              ),
                              icon: Icon(Icons.copy, size: 16),
                              onPressed: copiarCodigo,
                              label: Text("Copiar"),
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                ),

              // Área de respuesta con código COMPLETO - SIN LÍMITES DE ALTURA
              Expanded(
                child: respuesta.isEmpty && !cargando
                    ? Container(
                        decoration: BoxDecoration(
                          gradient: LinearGradient(
                            colors: [Color(0xFF1E1E2E), Color(0xFF2D2D44)],
                            begin: Alignment.topLeft,
                            end: Alignment.bottomRight,
                          ),
                          borderRadius: BorderRadius.circular(16),
                          border:
                              Border.all(color: Colors.white.withOpacity(0.1)),
                        ),
                        child: Center(
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.center,
                            children: [
                              Container(
                                padding: EdgeInsets.all(20),
                                decoration: BoxDecoration(
                                  color: Colors.white.withOpacity(0.05),
                                  shape: BoxShape.circle,
                                ),
                                child: Icon(
                                  Icons.auto_awesome,
                                  size: 64,
                                  color: Colors.cyan.withOpacity(0.7),
                                ),
                              ),
                              SizedBox(height: 20),
                              Text(
                                "Tu código aparecerá aquí ✨",
                                style: TextStyle(
                                  color: Colors.white,
                                  fontSize: 20,
                                  fontWeight: FontWeight.bold,
                                ),
                              ),
                              SizedBox(height: 8),
                              Text(
                                "Describe lo que necesitas y haz clic en Generar",
                                style: TextStyle(
                                  color: Colors.white54,
                                  fontSize: 16,
                                ),
                                textAlign: TextAlign.center,
                              ),
                            ],
                          ),
                        ),
                      )
                    : cargando
                        ? Container(
                            decoration: BoxDecoration(
                              gradient: LinearGradient(
                                colors: [Color(0xFF1E1E2E), Color(0xFF2D2D44)],
                                begin: Alignment.topLeft,
                                end: Alignment.bottomRight,
                              ),
                              borderRadius: BorderRadius.circular(16),
                              border: Border.all(
                                  color: Colors.white.withOpacity(0.1)),
                            ),
                            child: Center(
                              child: Column(
                                mainAxisAlignment: MainAxisAlignment.center,
                                children: [
                                  Container(
                                    width: 60,
                                    height: 60,
                                    decoration: BoxDecoration(
                                      color: Colors.white.withOpacity(0.05),
                                      shape: BoxShape.circle,
                                    ),
                                    child: CircularProgressIndicator(
                                      strokeWidth: 3,
                                      valueColor: AlwaysStoppedAnimation<Color>(
                                          Colors.cyan),
                                    ),
                                  ),
                                  SizedBox(height: 20),
                                  Text(
                                    "Generando código...",
                                    style: TextStyle(
                                      color: Colors.white,
                                      fontSize: 18,
                                      fontWeight: FontWeight.w600,
                                    ),
                                  ),
                                  SizedBox(height: 8),
                                  Text(
                                    "La IA está creando tu código mágicamente",
                                    style: TextStyle(
                                      color: Colors.white54,
                                      fontSize: 14,
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          )
                        : Container(
                            width: double.infinity,
                            decoration: BoxDecoration(
                              gradient: LinearGradient(
                                colors: [Color(0xFF1E1E2E), Color(0xFF2D2D44)],
                                begin: Alignment.topLeft,
                                end: Alignment.bottomRight,
                              ),
                              borderRadius: respuesta.isNotEmpty && !cargando
                                  ? BorderRadius.only(
                                      bottomLeft: Radius.circular(16),
                                      bottomRight: Radius.circular(16),
                                    )
                                  : BorderRadius.circular(16),
                              border: Border.all(
                                  color: Colors.white.withOpacity(0.1)),
                            ),
                            child: Scrollbar(
                              thumbVisibility: true,
                              child: SingleChildScrollView(
                                padding: EdgeInsets.all(20),
                                physics: BouncingScrollPhysics(),
                                child: Container(
                                  width: double.infinity,
                                  child: SelectableText(
                                    respuesta,
                                    style: TextStyle(
                                      fontFamily: "Roboto Mono",
                                      fontSize: 14,
                                      color: Colors.white,
                                      height: 1.5,
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  // Métodos auxiliares para el manejo de lenguajes
  IconData _obtenerIconoLenguaje(String lenguaje) {
    switch (lenguaje) {
      case "dart":
        return Icons.smartphone;
      case "javascript":
        return Icons.javascript;
      case "html":
        return Icons.language;
      case "css":
        return Icons.palette;
      default:
        return Icons.code;
    }
  }

  Color _obtenerColorLenguaje(String lenguaje) {
    switch (lenguaje) {
      case "dart":
        return Colors.blue;
      case "javascript":
        return Colors.yellow;
      case "html":
        return Colors.orange;
      case "css":
        return Colors.pink;
      default:
        return Colors.white;
    }
  }

  String _obtenerNombreLenguaje(String lenguaje) {
    switch (lenguaje) {
      case "dart":
        return "Dart/Flutter";
      case "javascript":
        return "JavaScript";
      case "html":
        return "HTML";
      case "css":
        return "CSS";
      default:
        return "Texto";
    }
  }
}

// Modelo para el historial
class HistorialItem {
  final String prompt;
  final String respuesta;
  final String modelo;
  final DateTime fecha;
  final String lenguaje;

  HistorialItem({
    required this.prompt,
    required this.respuesta,
    required this.modelo,
    required this.fecha,
    required this.lenguaje,
  });
}

// Diálogo para mostrar el historial
class HistorialDialog extends StatelessWidget {
  final List<HistorialItem> historial;
  final Function(HistorialItem) onSeleccionar;

  const HistorialDialog({required this.historial, required this.onSeleccionar});

  @override
  Widget build(BuildContext context) {
    return Dialog(
      backgroundColor: Color(0xFF1E1E2E),
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),
      child: Container(
        width: MediaQuery.of(context).size.width * 0.9,
        height: MediaQuery.of(context).size.height * 0.8,
        padding: EdgeInsets.all(24),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(Icons.history, color: Colors.purpleAccent, size: 28),
                SizedBox(width: 12),
                Text(
                  "Historial de Consultas",
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                Spacer(),
                IconButton(
                  icon: Icon(Icons.close, color: Colors.white70),
                  onPressed: () => Navigator.of(context).pop(),
                ),
              ],
            ),
            SizedBox(height: 16),
            Expanded(
              child: historial.isEmpty
                  ? Center(
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Icon(Icons.history, size: 64, color: Colors.white30),
                          SizedBox(height: 16),
                          Text(
                            "No hay consultas en el historial",
                            style:
                                TextStyle(color: Colors.white54, fontSize: 16),
                          ),
                        ],
                      ),
                    )
                  : ListView.builder(
                      itemCount: historial.length,
                      itemBuilder: (context, index) {
                        final item = historial[index];
                        return Container(
                          margin: EdgeInsets.only(bottom: 12),
                          decoration: BoxDecoration(
                            gradient: LinearGradient(
                              colors: [Color(0xFF2D2D44), Color(0xFF3D3D5A)],
                              begin: Alignment.centerLeft,
                              end: Alignment.centerRight,
                            ),
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: ListTile(
                            leading: Container(
                              padding: EdgeInsets.all(8),
                              decoration: BoxDecoration(
                                color: _obtenerColorLenguaje(item.lenguaje)
                                    .withOpacity(0.2),
                                borderRadius: BorderRadius.circular(8),
                              ),
                              child: Icon(
                                _obtenerIconoLenguaje(item.lenguaje),
                                color: _obtenerColorLenguaje(item.lenguaje),
                                size: 20,
                              ),
                            ),
                            title: Text(
                              item.prompt.length > 40
                                  ? "${item.prompt.substring(0, 40)}..."
                                  : item.prompt,
                              style: TextStyle(
                                  color: Colors.white,
                                  fontWeight: FontWeight.w500),
                            ),
                            subtitle: Text(
                              "${_formatearFecha(item.fecha)} • ${item.modelo.split('/').last}",
                              style: TextStyle(color: Colors.white70),
                            ),
                            trailing: Icon(
                              Icons.arrow_forward_ios,
                              color: Colors.cyan,
                              size: 16,
                            ),
                            onTap: () {
                              onSeleccionar(item);
                              Navigator.of(context).pop();
                            },
                          ),
                        );
                      },
                    ),
            ),
          ],
        ),
      ),
    );
  }

  String _formatearFecha(DateTime fecha) {
    return "${fecha.day}/${fecha.month}/${fecha.year} ${fecha.hour}:${fecha.minute.toString().padLeft(2, '0')}";
  }

  IconData _obtenerIconoLenguaje(String lenguaje) {
    switch (lenguaje) {
      case "dart":
        return Icons.smartphone;
      case "javascript":
        return Icons.javascript;
      case "html":
        return Icons.language;
      case "css":
        return Icons.palette;
      default:
        return Icons.code;
    }
  }

  Color _obtenerColorLenguaje(String lenguaje) {
    switch (lenguaje) {
      case "dart":
        return Colors.blue;
      case "javascript":
        return Colors.yellow;
      case "html":
        return Colors.orange;
      case "css":
        return Colors.pink;
      default:
        return Colors.white;
    }
  }
}

// Diálogo para vista previa de HTML
class VistaPreviaDialog extends StatelessWidget {
  final String codigo;
  final String lenguaje;

  const VistaPreviaDialog({required this.codigo, required this.lenguaje});

  @override
  Widget build(BuildContext context) {
    return Dialog(
      backgroundColor: Color(0xFF1E1E2E),
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(20)),
      child: Container(
        width: MediaQuery.of(context).size.width * 0.9,
        height: MediaQuery.of(context).size.height * 0.8,
        padding: EdgeInsets.all(24),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              children: [
                Icon(Icons.visibility, color: Colors.orange, size: 28),
                SizedBox(width: 12),
                Text(
                  "Vista Previa HTML",
                  style: TextStyle(
                    color: Colors.white,
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                  ),
                ),
                Spacer(),
                IconButton(
                  icon: Icon(Icons.close, color: Colors.white70),
                  onPressed: () => Navigator.of(context).pop(),
                ),
              ],
            ),
            SizedBox(height: 20),
            Expanded(
              child: Container(
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(12),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.black.withOpacity(0.3),
                      blurRadius: 10,
                      offset: Offset(0, 4),
                    ),
                  ],
                ),
                child: HtmlViewer(htmlContent: codigo),
              ),
            ),
          ],
        ),
      ),
    );
  }
}

// Widget para visualizar HTML (simplificado)
class HtmlViewer extends StatelessWidget {
  final String htmlContent;

  const HtmlViewer({required this.htmlContent});

  @override
  Widget build(BuildContext context) {
    return Center(
      child: Padding(
        padding: EdgeInsets.all(24),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Container(
              padding: EdgeInsets.all(20),
              decoration: BoxDecoration(
                color: Colors.blue.withOpacity(0.1),
                shape: BoxShape.circle,
              ),
              child: Icon(Icons.language, size: 48, color: Colors.blue),
            ),
            SizedBox(height: 20),
            Text(
              "Vista Previa de HTML",
              style: TextStyle(
                color: Colors.black87,
                fontSize: 22,
                fontWeight: FontWeight.bold,
              ),
            ),
            SizedBox(height: 12),
            Text(
              "Esta funcionalidad mostraría una vista previa\ndel código HTML renderizado en una aplicación real",
              textAlign: TextAlign.center,
              style: TextStyle(color: Colors.black54, fontSize: 16),
            ),
            SizedBox(height: 24),
            Container(
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  colors: [Colors.blue, Colors.lightBlue],
                  begin: Alignment.topLeft,
                  end: Alignment.bottomRight,
                ),
                borderRadius: BorderRadius.circular(12),
              ),
              child: ElevatedButton(
                style: ElevatedButton.styleFrom(
                  backgroundColor: Colors.transparent,
                  foregroundColor: Colors.white,
                  padding: EdgeInsets.symmetric(horizontal: 32, vertical: 16),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                ),
                onPressed: () {
                  FlutterClipboard.copy(htmlContent).then((value) {
                    ScaffoldMessenger.of(context).showSnackBar(
                      SnackBar(
                        content: Text('✅ HTML copiado al portapapeles'),
                        backgroundColor: Colors.green,
                      ),
                    );
                  });
                },
                child: Text("Copiar HTML", style: TextStyle(fontSize: 16)),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
